#!/usr/bin/env python

import os
import sys
from time import strftime

valid_pkgnames = ["libmate", "libmatecanvas", "libmatecomponent", "libmatecomponentui", "libmatekbd", "libmatekeyring", "libmatenotify", "libmateui", "libmateweather", "mate-backgrounds", "mate-common", "mate-conf", "mate-control-center", "mate-corba", "mate-desktop", "mate-dialogs", "mate-display-manager", "mate-doc-utils", "mate-file-manager", "mate-icon-theme", "mate-keyring", "mate-menus", "mate-mime-data", "mate-notification-daemon", "mate-panel", "mate-polkit", "mate-session-manager", "mate-settings-daemon", "mate-themes", "mate-vfs", "mate-window-manager"]

def usage():
    print "USAGE: update-source-from-git-latest pkgname"
    print "pkgname can be one of the following: "
    for valid_pkgname in valid_pkgnames:
        print "      %s" %valid_pkgname    

if len(sys.argv) != 2:
    print "WRONG NUMBER OF ARGUMENTS!"
    usage()
    sys.exit(1)
    
pkgname = sys.argv[1]

if not pkgname in valid_pkgnames:
    print "INVALID PKGNAME!"
    usage()
    sys.exit(1)

ROOT_DIR = os.getcwd()
SOURCE_DIR = ROOT_DIR + "/git-source/Mate-Desktop-Environment"

# Get the latest source code
if os.path.exists(SOURCE_DIR):
    print "PULLING LATEST SOURCE CODE CHANGES FROM FROM GITHUB..."
    os.chdir(SOURCE_DIR)
    os.system("git pull")
else:
    print "CLONING MATE SOURCE CODE FROM GITHUB..."
    os.chdir(ROOT_DIR)
    os.system("mkdir -p git-source")    
    os.system("git clone https://github.com/Perberos/Mate-Desktop-Environment.git")

# Clean up mate-conf
print "CLEANING UP %s..." % pkgname
os.chdir(ROOT_DIR)
os.system("git clean -f -x -d %s/" % pkgname)

# Remove any previous orig archive
print "REMOVING PREVIOUS ARCHIVES FOR %s..." % pkgname
os.chdir(ROOT_DIR)
os.system("rm -rf %s*bz2" % pkgname)

# Copy mate-conf
print "COPYING SOURCE CODE INTO PACKAGE FOR %s..." % pkgname
os.chdir(ROOT_DIR)
os.system("cp -R %(SOURCE_DIR)s/%(pkgname)s/* %(pkgname)s/" % {'SOURCE_DIR':SOURCE_DIR, 'pkgname':pkgname})

# Create an orig archive
print "CREATING NEW ORIG.TAR.BZ2 ARCHIVE FOR %s..." % pkgname
today = strftime("%Y.%m.%d")
archive_filename = "%(pkgname)s_%(today)s.orig.tar" % {'pkgname':pkgname, 'today':today}
os.chdir(SOURCE_DIR)
os.chdir(pkgname)
os.system("tar cf %s *" % archive_filename)
os.system("bzip2 %s" % archive_filename)
os.system("mv %(archive_filename)s.bz2 %(ROOT_DIR)s/" % {'archive_filename':archive_filename, 'ROOT_DIR':ROOT_DIR})

print "FINISHED UPDATING SOURCE FOR %s" % pkgname
